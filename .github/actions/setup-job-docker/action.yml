name: 'setup job'
description: 'Setup dart and/or rust CI job'
inputs:
  dart:
    description: 'Setup dart'
    default: "false"
    required: false
  rust:
    description: 'Setup rust'
    default: "false"
    required: false
  cache-key:
    description: 'An optional key that is added to the automatic cache key'
    default: ""
    required: false
  jfrog_token:
    description: Token for accessing our Jfrog instance
    default: "false"
    required: false
runs:
  using: "composite"
  steps:
    - name: Load .env
      uses: xom9ikk/dotenv@d3ff95524814ceac377510f30f4af6296ea612c1 #v1.0.2

    - name: Setup cmake
      uses: jwlawson/actions-setup-cmake@884cf5c591490f86b788d68b6f585f26235578d6 # v1.12

    - uses: Swatinem/rust-cache@cb2cf0cc7c5198d3364b9630e2c3d457f160790c # v1.4.0
      if: inputs.rust != 'false'
      with:
        key: ${{ inputs.cache-key }}
        working-directory: ${{ env.RUST_WORKSPACE }}

    - name: Configure cargo
      shell: bash
      run: |
        # We do this since multiple jobs are run on the same CI build server,
        # and if multiple cargo build jobs run at max parallelism it ends up
        # slowing all builds down.
        echo "CARGO_BUILD_JOBS=6" >> $GITHUB_ENV

    - name: Jfrog authentication
      shell: bash
      if: ${{ inputs.jfrog_token != 'false' }}
      env:
          JFROG_TOKEN: ${{ inputs.jfrog_token }}
      run: |
        if [ -z "${JFROG_TOKEN}" ]; then
          echo "JFROG access token missing"
          exit 1
        fi
        echo "${JFROG_TOKEN}" | dart pub token add "https://xayn.jfrog.io/artifactory/api/pub/dart.xayn.private"

    - name: dart deps
      shell: bash
      if: ${{ inputs.dart != 'false' }}
      run: just dart-deps
