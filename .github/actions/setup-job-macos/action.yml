name: 'setup job'
description: 'Setup dart and/or rust CI job'
inputs:
  flutter:
    description: 'Setup flutter'
    default: "false"
    required: false
  rust-target:
    description: 'Install an additional rust target'
    default: "false"
    required: false
runs:
  using: "composite"
  steps:
    - shell: bash
      run: |
        echo "RUSTUP_HOME=$RUNNER_TOOL_CACHE/.rustup" >> $GITHUB_ENV
        echo "CARGO_HOME=$RUNNER_TOOL_CACHE/.cargo" >> $GITHUB_ENV
        echo "$RUNNER_TOOL_CACHE/.cargo/bin" >> $GITHUB_PATH

    - shell: bash
      run: curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --no-modify-path

    - name: Load .env
      uses: xom9ikk/dotenv@d3ff95524814ceac377510f30f4af6296ea612c1 #v1.0.2

    - name: Install just
      uses: extractions/setup-just@aa5d15c144db4585980a44ebfdd2cf337c4f14cb #v1.4.0
      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}
      with:
        just-version: ${{ env.JUST_VERSION }}

    - name: Install flutter
      uses: subosito/flutter-action@5e1529bc12adae5b26f30f0a4046ac743d6f0c5d # v2.3.0
      if: inputs.flutter != 'false'
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}

    - name: Setup flutter dependencies
      shell: bash
      if: inputs.flutter != 'false'
      run: just flutter-deps

    - name: Install rust toolchain
      working-directory: ${{ env.RUST_WORKSPACE }}
      shell: bash
      run: |
          # Rustup when used will automatically install the toolchain
          # specified in rust-toolchain.toml
          rustup show

    - name: Install rust deps
      working-directory: ${{ env.RUST_WORKSPACE }}
      shell: bash
      run: just rust-deps

    - name: Install rust target
      working-directory: ${{ env.RUST_WORKSPACE }}
      if: inputs.rust-target != ''
      shell: bash
      run: rustup target add ${{ inputs.rust-target }}

    - uses: Swatinem/rust-cache@d12701459954fec471b2d34cdf7ea3374b026383 # v1
      with:
        working-directory: ${{ env.RUST_WORKSPACE }}
