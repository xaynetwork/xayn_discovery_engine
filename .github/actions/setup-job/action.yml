name: 'setup job'
description: 'Setup dart and/or rust CI job'
inputs:
  dart:
    description: 'Setup dart'
    default: false
  flutter:
    description: 'Setup flutter'
    default: false
  rust:
    description: 'Setup rust'
    default: false
  deps:
    description: 'Fetch/Install dependencies'
    default: true
runs:
  using: "composite"
  steps:
    - name: Load .env
      uses: xom9ikk/dotenv@d3ff95524814ceac377510f30f4af6296ea612c1 #v1.0.2

    - name: Install just
      uses: extractions/setup-just@aa5d15c144db4585980a44ebfdd2cf337c4f14cb #v1.4.0
      env:
        GITHUB_TOKEN: ${{ env.GITHUB_TOKEN }}
      with:
        just-version: ${{ env.JUST_VERSION }}

    - name: Install dart
      uses: dart-lang/setup-dart@6a218f2413a3e78e9087f638a238f6b40893203d # v1.3
      # Flutter already installs a dart SDK, so we never need to install both
      if: ${{ inputs.dart != 'false' && inputs.flutter != 'true' }}
      with:
        sdk: ${{ env.DART_VERSION }}

    - name: Install flutter
      uses: subosito/flutter-action@5e1529bc12adae5b26f30f0a4046ac743d6f0c5d # v2.3.0
      if: inputs.flutter != 'false'
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        cache: true

    - name: Setup flutter dependencies
      shell: bash
      if: inputs.flutter != 'false'
      run: |
        just flutter-deps

    - name: Install rust toolchain
      working-directory: ${{ env.RUST_WORKSPACE }}
      if: inputs.rust != 'false'
      shell: bash
      run: |
        if [[ "${{ inputs.rust }}" == "true" ]]; then
          # Rustup when used will automatically install the toolchain
          # specified in rust-toolchain.toml
          rustup show
        elif [[ "${{ inputs.rust }}" == "nightly" ]]; then
          rustup toolchain install "${{ env.RUST_NIGHTLY }}" --component rustfmt  --profile minimal
        else
          echo "rust input must be set to `true` or `nightly`" >&2
          exit 1
        fi

    - uses: Swatinem/rust-cache@d12701459954fec471b2d34cdf7ea3374b026383 # v1
      if: inputs.rust != 'false'
      with:
        working-directory: ${{ env.RUST_WORKSPACE }}

    - name: Setup dependencies
      shell: bash
      if: inputs.deps
      run: |
        if [[ "${{ inputs.dart }}" != "false" || "${{ inputs.flutter }}" != "false" ]] && [[ "${{ inputs.rust }}" != "false" ]]; then
          # ffigen dep, not handled by `just` as it's OS specific.
          sudo apt-get install libclang-10-dev
        fi

        if [ "${{ inputs.rust }}" != "false" ]; then
          just rust-deps
        fi

        if [ "${{ inputs.dart }}" == "true" ]; then
          just dart-deps
        fi

        if [ "${{ inputs.flutter }}" == "true" ]; then
          just flutter-deps
        fi

