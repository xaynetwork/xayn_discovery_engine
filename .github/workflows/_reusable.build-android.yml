name: Build Android library

on:
  workflow_call:
    inputs:
      production:
        description: Builds android libraries for production release (with additional optimizations)
        default: false
        required: false
        type: boolean
    outputs:
      artifact-dir-base:
        description: The base name of artifact directory (without the target suffix)
        value: ${{ jobs.build-android-libs.outputs.artifact-dir-base }}

jobs:
  build-android-libs:
    runs-on: hetzner-pm
    container:
      image: xaynetci/yellow:v1
    timeout-minutes: 45
    strategy:
      matrix:
        target: [
          "aarch64-linux-android",
          "armv7-linux-androideabi",
          "x86_64-linux-android",
          "i686-linux-android",
        ]
    outputs:
      artifact-dir-base: ${{ steps.build.outputs.artifact-dir-base }}
    steps:
      - uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # v2.4.0

      - name: Setup the rust CI.
        uses: ./.github/actions/setup-job-docker
        with:
          rust: true
          cache-key: ${{ matrix.target }}-${{ inputs.production }}

      - name: Build Android library
        id: build
        run: |
          ARTIFACT_DIR_BASE=${{ github.job }}
          if ${{ inputs.production }}; then
            just compile-android-ci "${{ matrix.target }}" --prod
            ARTIFACT_DIR_BASE="${ARTIFACT_DIR_BASE}-production"
          else
            just compile-android-ci "${{ matrix.target }}"
          fi
          echo "::set-output name=artifact-dir-base::$ARTIFACT_DIR_BASE"

      - name: Check for malformed builds
        run: |
          just check-android-so

      - name: Upload library artifacts
        uses: actions/upload-artifact@82c141cc518b40d92cc801eee768e7aafc9c2fa2 # v2.3.1
        with:
          name: ${{ steps.build.outputs.artifact-dir-base }}-${{ matrix.target }}-${{ github.sha }}
          retention-days: 1
          if-no-files-found: error
          path: ${{ env.FLUTTER_WORKSPACE }}/android/src/main/jniLibs
