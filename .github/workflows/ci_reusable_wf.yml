name: Reusable Dev CI

on:
  workflow_call:
    outputs:
      wf-result:
        description: Result of the run
        value: ${{ jobs.run-ok.result }}
      wf-value:
        description: Result of run-ok
        value: ${{ jobs.run-ok.outputs.run-result }}

jobs:
  selection:
    runs-on: ubuntu-20.04

    # Set job outputs to values from filter step
    outputs:
      dart: ${{ steps.filter.outputs.dart }}
      rust: ${{ steps.filter.outputs.rust }}
      flutter: ${{ steps.filter.outputs.flutter }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # v2.4.0

      # For pull requests it's not necessary to checkout the code
      - uses: dorny/paths-filter@b2feaf19c27470162a626bd6fa8438ae5b263721
        id: filter
        with:
          filters: |
            rust: &rust
              - 'discovery_engine_core/**'
              - '.github/workflows/ci*'
              - '.github/actions/setup-job-docker/*'
              - '.github/actions/setup-job/*'
              - 'justfile'
            dart: &dart
              - *rust
              - 'discovery_engine/**'
            flutter:
              - *rust
              - *dart
              - 'discovery_engine_flutter/**'

  # DART CI
  dart-format:
    needs: selection
    if: ${{ needs.selection.outputs.dart == 'true' }}
    runs-on: ubuntu-20.04
    container:
      image: xaynetci/yellow:9135de0
    timeout-minutes: 10
    steps:
      - name: Checkout repository
        uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # v2.4.0

      - name: Setup the dart CI.
        uses: ./.github/actions/setup-job-docker
        with:
          dart: true

      - name: Check formatting
        run: just dart-fmt

  dart-analyze:
    needs: selection
    if: ${{ needs.selection.outputs.dart == 'true' }}
    runs-on: ubuntu-20.04
    container:
      image: xaynetci/yellow:9135de0
    timeout-minutes: 15
    steps:
      - name: Checkout repository
        uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # v2.4.0

      - name: Setup the rust/dart CI.
        uses: ./.github/actions/setup-job-docker
        with:
          dart: true
          rust: true

      - name: Analyze code
        run: just dart-check

  dart-test:
    needs: [selection, cargo-test]
    if: ${{ always()}}
    runs-on: ubuntu-20.04
    container:
      image: xaynetci/yellow:9135de0
    timeout-minutes: 20
    steps:
      - name: Check cargo-test
        run: |
          if( ${{ needs.cargo-test.result == 'failure'}})
          then
            exit 1
          fi

      - name: Checkout repository
        uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # v2.4.0

      - name: Setup the rust/dart CI.
        uses: ./.github/actions/setup-job-docker
        with:
          dart: true
          rust: true

      - name: Run tests
        run: just dart-test

  dart-doc:
    needs: selection
    if: ${{ needs.selection.outputs.dart == 'true' }}
    runs-on: ubuntu-20.04
    container:
      image: xaynetci/yellow:9135de0
    timeout-minutes: 15
    steps:
      - name: Checkout repository
        uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # v2.4.0

      - name: Setup the dart CI.
        uses: ./.github/actions/setup-job-docker
        with:
          dart: true
          rust: true

      - name: Install dartdoc
        working-directory: ${{ env.DART_WORKSPACE }}
        run: dart pub global activate dartdoc

      - name: Check documentation
        run: just dart-check-doc

  dart-ok:
    runs-on: ubuntu-20.04
    needs:
      - selection
      - dart-format
      - dart-analyze
      - dart-test
      - dart-doc
    if: ${{always()}}
    steps:
      - run: |
          if(${{ needs.selection.outputs.dart == 'false'}} ||
             (${{needs.dart-format.result == 'success'}} && ${{needs.dart-analyze.result == 'success'}} &&
              ${{needs.dart-test.result == 'success'}} && ${{needs.dart-doc.result == 'success'}}))
          then
            exit 0
          else
            exit 1
          fi

  # Flutter CI
  flutter-analyze:
    needs: selection
    if: ${{ needs.selection.outputs.dart == 'true' || needs.selection.outputs.flutter == 'true' }}
    runs-on: ubuntu-20.04
    container:
      image: xaynetci/yellow:9135de0
    timeout-minutes: 15
    steps:
      - name: Checkout repository
        uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # v2.4.0

      - name: Setup the CI
        uses: ./.github/actions/setup-job-docker
        with:
          rust: true

      - name: Analyze code
        run: just flutter-check

  flutter-test:
    needs: selection
    if: ${{ needs.selection.outputs.dart == 'true' || needs.selection.outputs.flutter == 'true' }}
    runs-on: ubuntu-20.04
    container:
      image: xaynetci/yellow:9135de0
    timeout-minutes: 15
    steps:
      - name: Checkout repository
        uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # v2.4.0

      - name: Setup the CI
        uses: ./.github/actions/setup-job-docker
        with:
          rust: true

      - name: Run tests
        run: just flutter-test

  flutter-ok:
    runs-on: ubuntu-20.04
    if: ${{always()}}
    needs:
      - selection
      - flutter-test
      - flutter-analyze
    steps:
      - run: |
          if(${{ needs.selection.outputs.flutter == 'false'}} ||
             (${{needs.flutter-test.result == 'success'}} && ${{needs.flutter-analyze.result == 'success'}}))
          then
            exit 0
          else
            exit 1
          fi

  # RUST CI
  cargo-format:
    needs: selection
    if: ${{ needs.selection.outputs.rust == 'true' }}
    runs-on: ubuntu-20.04
    container:
      image: xaynetci/yellow:9135de0
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # v2.4.0

      - name: Setup the CI.
        uses: ./.github/actions/setup-job-docker
        with:
          rust: nightly

      - name: cargo fmt
        run: just rust-fmt

  cargo-clippy:
    needs: selection
    if: ${{ needs.selection.outputs.rust == 'true' }}
    runs-on: ubuntu-20.04
    container:
      image: xaynetci/yellow:9135de0
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # v2.4.0

      - name: Setup the rust CI.
        uses: ./.github/actions/setup-job-docker
        with:
          rust: true

      - name: cargo clippy
        run: |
          just rust-check

  cargo-test:
    needs: selection
    if: ${{ needs.selection.outputs.rust == 'true' }}
    runs-on: ubuntu-20.04
    container:
      image: xaynetci/yellow:9135de0
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # v2.4.0

      - name: Setup the rust CI.
        uses: ./.github/actions/setup-job-docker
        with:
          rust: true

      - name: Run tests
        run: |
          just rust-test

  cargo-doc:
    needs: selection
    if: ${{ needs.selection.outputs.rust == 'true' }}
    runs-on: ubuntu-20.04
    container:
      image: xaynetci/yellow:9135de0
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # v2.4.0

      - name: Setup the rust CI.
        uses: ./.github/actions/setup-job-docker
        with:
          rust: true

      - name: cargo doc
        run: |
          just rust-check-doc

  cargo-ok:
    name: cargo-ok
    needs:
      - cargo-format
      - cargo-clippy
      - cargo-test
      - cargo-doc
    runs-on: ubuntu-20.04
    steps:
      - run: exit 0

  run-ok:
    needs: [selection, dart-ok, cargo-ok, flutter-ok]
    if: ${{always()}}
    outputs:
      run-result:  ${{ steps.run-check.outputs.run-result }}
    runs-on: ubuntu-20.04
    timeout-minutes: 5
    steps:
      - name: Run Check
        id: run-check
        run: |
          if (  ( ${{needs.selection.outputs.rust == 'false'}} || ${{needs.cargo-ok.result == 'success'}} ) &&
                ( ${{needs.selection.outputs.dart == 'false'}} || ${{needs.dart-ok.result == 'success'}} ) &&
                ( ${{needs.selection.outputs.flutter == 'false'}} || ${{needs.flutter-ok.result == 'success'}} )
          ); then
            echo "::set-output name=run-result::$(echo 'success')"
            exit 0
          else
            echo "::set-output name=run-result::$(echo 'failed')"
            exit 1
          fi
