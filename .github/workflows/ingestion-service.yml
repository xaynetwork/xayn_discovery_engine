name: Ingestion Service Release

on:
  workflow_dispatch:
    inputs:
      tag:
        type: string
        default: ''
        description: a tag for image identification (xaynetci/xayn_discovery_ingestion_service:$TAG)
      features:
        type: string
        default: ''
        description: a comma-separated list of library features for compilation
      target:
        type: choice
        options:
          - default
          - aarch64-unknown-linux-gnu
        default: default
        description: a rust target triple for compilation

permissions:
  contents: read

env:
  DENY_WARNINGS: false

jobs:
  rust-build:
    runs-on: hetzner-pm
    container:
      image: xaynetci/yellow:v11
    timeout-minutes: 30
    steps:
      - name: Checkout repository
        uses: actions/checkout@24cb9080177205b6e8c946b17badbe402adc938f # v3.4.0

      - name: Setup job
        uses: ./.github/actions/setup-job-docker

      - name: Build default artifacts
        if: ${{ github.event.inputs.target == 'default' }}
        run: just build-service ingestion "${{ github.event.inputs.features }}"

      - name: Build aarch64 artifacts
        if: ${{ github.event.inputs.target != 'default' }}
        env:
          CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER: aarch64-linux-gnu-gcc
          CC_aarch64_unknown_linux_gnu: aarch64-linux-gnu-gcc
          CXX_aarch64_unknown_linux_gnu: aarch64-linux-gnu-g++
        run: |
          apt update -y && apt upgrade -y
          apt install -y g++-aarch64-linux-gnu libc6-dev-arm64-cross

          rustup target add aarch64-unknown-linux-gnu
          rustup toolchain install stable-aarch64-unknown-linux-gnu

          cargo build --release --bin ingestion --target aarch64-unknown-linux-gnu

      - name: Download assets
        run: just download-assets smbert v0003

      - name: Prepare temp directory
        working-directory: ${{ runner.temp }}
        run: |
          rm -rf ./ingestion-service
          mkdir -p ingestion-service/assets

      - if: ${{ github.event.inputs.target == 'default' }}
        working-directory: ${{ runner.temp }}
        run: cp ${GITHUB_WORKSPACE}/target/release/ingestion ./ingestion-service/server.bin

      - if: ${{ github.event.inputs.target != 'default' }}
        working-directory: ${{ runner.temp }}
        run: cp ${GITHUB_WORKSPACE}/target/aarch64-unknown-linux-gnu/release/ingestion ./ingestion-service/server.bin

      - name: Create archive
        working-directory: ${{ runner.temp }}
        run: |
          cp ${GITHUB_WORKSPACE}/web-api/Dockerfile ./ingestion-service/Dockerfile
          cp ${GITHUB_WORKSPACE}/assets/smbert_v0003/config.toml ./ingestion-service/assets/config.toml
          cp ${GITHUB_WORKSPACE}/assets/smbert_v0003/vocab.txt ./ingestion-service/assets/vocab.txt
          cp ${GITHUB_WORKSPACE}/assets/smbert_v0003/model.onnx ./ingestion-service/assets/model.onnx
          tar -cvf ingestion-service.tar ./ingestion-service

      - name: Upload archive
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3.1.2
        with:
          name: ingestion-service
          retention-days: 1
          if-no-files-found: error
          path: ${{ runner.temp }}/ingestion-service.tar

  docker-build:
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    needs: rust-build
    steps:
      - name: Checkout repository
        uses: actions/checkout@24cb9080177205b6e8c946b17badbe402adc938f # v3.4.0

      - name: Set up QEMU
        if: ${{ github.event.inputs.target != 'default' }}
        uses: docker/setup-qemu-action@e81a89b1732b9c48d79cd809d8d81d79c4647a18 # v2.1.0
        with:
          platforms: 'arm64'

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@4b4e9c3e2d4531116a6f8ba8e71fc6e2cb6e6c8c # v2.5.0

      - name: Download artifacts
        id: artifacts
        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2
        with:
          name: ingestion-service

      - name: Create docker image
        run: |
          tar -xvf ingestion-service.tar
          cd ./ingestion-service
          TAG=${{ github.event.inputs.tag }}
          if [ -z "$TAG" ]; then
            TAG="branch-$(git rev-parse --abbrev-ref HEAD)"
            if [[ "${TAG}" == "branch-HEAD" ]]; then
              TAG="$(git rev-parse --short HEAD)"
            fi
          fi
          IMAGE_NAME="xaynetci/xayn_discovery_ingestion_service:$TAG"
          echo "IMAGE_NAME=${IMAGE_NAME}" >> $GITHUB_ENV
          echo "TAG=${TAG}" >> $GITHUB_ENV

      - if: ${{ github.event.inputs.target == 'default' }}
        working-directory: ingestion-service
        run: docker build -t "$IMAGE_NAME" .

      - if: ${{ github.event.inputs.target != 'default' }}
        working-directory: ingestion-service
        run: docker build --platform linux/arm64 -t "$IMAGE_NAME" .

      - name: Login to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a # v2.1.0
        with:
          username: "${{ secrets.DOCKERHUB_USERNAME }}"
          password: "${{ secrets.DOCKERHUB_TOKEN }}"

      - name: docker push
        run: docker push "${IMAGE_NAME}"
