name: Ingestion Service Release

on:
  workflow_dispatch:
    inputs:
      tag:
        required: false
        description: a tag that will be used for identifying this version (xaynetci/xayn_discovery_ingestion_service:$TAG)

permissions:
  contents: read

env:
  DENY_WARNINGS: false

jobs:
  rust-build:
    runs-on: hetzner-pm
    container:
      image: xaynetci/yellow:v6
    timeout-minutes: 10
    steps:
      - name: Checkout repository
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # v3.1.0

      - name: Setup job
        uses: ./.github/actions/setup-job-docker

      - name: Build artifacts
        run: just build-ingestion-service

      - name: Download assets
        run: just download-assets

      - name: Prepare temp directory
        working-directory: ${{ runner.temp }}
        run: |
          rm -rf ./ingestion-service
          mkdir -p ingestion-service/assets

      - name: Create archive
        working-directory: ${{ runner.temp }}
        run: |
          cp ${GITHUB_WORKSPACE}/target/release/ingestion ./ingestion-service/server.bin
          cp ${GITHUB_WORKSPACE}/web-api/Dockerfile ./ingestion-service/Dockerfile
          cp ${GITHUB_WORKSPACE}/assets/smbert_v0003/config.toml ./ingestion-service/assets/config.toml
          cp ${GITHUB_WORKSPACE}/assets/smbert_v0003/vocab.txt ./ingestion-service/assets/vocab.txt
          cp ${GITHUB_WORKSPACE}/assets/smbert_v0003/model.onnx ./ingestion-service/assets/model.onnx
          tar -cvf ingestion-service.tar ./ingestion-service

      - name: Upload archive
        uses: actions/upload-artifact@83fd05a356d7e2593de66fc9913b3002723633cb # v3.1.1
        with:
          name: ingestion-service
          retention-days: 1
          if-no-files-found: error
          path: ${{ runner.temp }}/ingestion-service.tar

  docker-build:
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    needs: rust-build
    steps:
      - name: Checkout repository
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # v3.1.0

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@8c0edbc76e98fa90f69d9a2c020dcb50019dc325 # v2.2.1

      - name: Download artifacts
        id: artifacts
        uses: actions/download-artifact@9782bd6a9848b53b110e712e20e42d89988822b7 # v3.0.1
        with:
          name: ingestion-service

      - name: Create docker image
        run: |
          tar -xvf ingestion-service.tar
          cd ./ingestion-service
          TAG=${{ github.event.inputs.tag }}
          if [ -z "$TAG" ]; then
            TAG="branch-$(git rev-parse --abbrev-ref HEAD)"
            if [[ "${TAG}" == "branch-HEAD" ]]; then
              TAG="$(git rev-parse --short HEAD)"
            fi
          fi
          IMAGE_NAME="xaynetci/xayn_discovery_ingestion_service:$TAG"
          docker build -t "${IMAGE_NAME}" .
          echo "IMAGE_NAME=${IMAGE_NAME}" >> $GITHUB_ENV
          echo "TAG=${TAG}" >> $GITHUB_ENV

      - name: Login to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a # v2.1.0
        with:
          username: "${{ secrets.DOCKERHUB_USERNAME }}"
          password: "${{ secrets.DOCKERHUB_TOKEN }}"

      - name: docker push
        id: docker-push
        run: docker push "${IMAGE_NAME}"
