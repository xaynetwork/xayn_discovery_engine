name: Release-CI

on:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  #build-ios-libs:
  #  uses: ./.github/workflows/ci_build_ios.yml
  #  with:
  #    production: true

  #build-android-libs:
  #  uses: ./.github/workflows/ci_build_android.yml
  #  with:
  #    production: true

  release:
    runs-on: ubuntu-20.04
    #container:
      #image: xaynetci/yellow:9135de0
    timeout-minutes: 10
    # needs: [build-ios-libs, build-android-libs]
    steps:
      - name: Install SSH key
        uses: shimataro/ssh-key-action@3c9b0fc6f2d223b8450b02a0445f526350fc73e0 # v2.3.1
        with:
          key: ${{ secrets.SSH}}
          known_hosts: ${{ secrets.KNOWN_HOSTS }}
          config: |
            Host github
            HostName github.com
            IdentityFile ~/.ssh/id_rsa-github
          if_key_exists: replace

      - name: Install SSH key gitlab
        uses: shimataro/ssh-key-action@3c9b0fc6f2d223b8450b02a0445f526350fc73e0 # v2.3.1
        with:
          key: ${{ secrets.SSH}}
          known_hosts: ${{ secrets.KNOWN_HOSTS }}
          config: |
            Host gitlab
            HostName gitlab.com
            IdentityFile ~/.ssh/id_rsa-gitlab
          if_key_exists: replace

      - name: Checkout repository
        uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # v2.4.0

      - name: Setup job
        uses: ./.github/actions/setup-job
        with:
          dart: true
          rust: true

      # - name: Download artifacts
      #   id: artifacts
      #   uses: actions/download-artifact@f023be2c48cc18debc3bacd34cb396e0295e2869 # v2.1.0
      #   with:
      #     path: ${{ runner.temp }}/artifacts/

      # - name: Copy artifacts
      #   working-directory: ${{ steps.artifacts.outputs.download-path }}
      #   run: |
      #     cp -R ${{ needs.build-ios-libs.outputs.artifact-dir-base }}-*/* ${GITHUB_WORKSPACE}/${{ env.FLUTTER_WORKSPACE }}/ios

      #     ANDROID_LIBS_DIR=${GITHUB_WORKSPACE}/${{ env.FLUTTER_WORKSPACE }}/android/src/main/jniLibs
      #     mkdir -p $ANDROID_LIBS_DIR
      #     cp -R ${{ needs.build-android-libs.outputs.artifact-dir-base }}-*/* $ANDROID_LIBS_DIR

      # - name: Generate Files
      #   shell: bash
      #   run: just dart-build

      - name: Configure Git
        shell: bash
        run: |
          git config --global user.email "ci@xayn.com"
          git config --global user.name "ci"

      - name: Copy Repository
        shell: bash
        run: .github/scripts/release.sh --do-push
