name: Web Service Release

on:
  workflow_dispatch:
    inputs:
      tag:
        required: false
        description: a tag that will be used for identifying this version (xaynetci/xayn_discovery_web_service:$TAG)

permissions:
  contents: read

env:
  DENY_WARNINGS: false

jobs:
  rust-build:
    runs-on: hetzner-pm
    container:
      image: xaynetci/yellow:v9
    timeout-minutes: 10
    steps:
      - name: Checkout repository
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0

      - name: Setup job
        uses: ./.github/actions/setup-job-docker

      - name: Build artifacts
        run: just build-web-service

      - name: Prepare temp directory
        working-directory: ${{ runner.temp }}
        run: |
          rm -rf ./web-service
          mkdir web-service

      - name: Create archive
        working-directory: ${{ runner.temp }}
        run: |
          cp ${GITHUB_WORKSPACE}/target/release/personalization ./web-service/server.bin
          cp ${GITHUB_WORKSPACE}/web-api/Dockerfile ./web-service/Dockerfile
          tar -cvf web-service.tar ./web-service

      - name: Upload archive
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3.1.2
        with:
          name: web-service
          retention-days: 1
          if-no-files-found: error
          path: ${{ runner.temp }}/web-service.tar

  docker-build:
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    needs: rust-build
    steps:
      - name: Checkout repository
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@8c0edbc76e98fa90f69d9a2c020dcb50019dc325 # v2.2.1

      - name: Download artifacts
        id: artifacts
        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2
        with:
          name: web-service

      - name: Create docker image
        run: |
          tar -xvf web-service.tar
          cd ./web-service
          TAG=${{ github.event.inputs.tag }}
          if [ -z "$TAG" ]; then
            TAG="branch-$(git rev-parse --abbrev-ref HEAD)"
            if [[ "${TAG}" == "branch-HEAD" ]]; then
              TAG="$(git rev-parse --short HEAD)"
            fi
          fi
          IMAGE_NAME="xaynetci/xayn_discovery_web_service:$TAG"
          docker build -t "${IMAGE_NAME}" .
          echo "IMAGE_NAME=${IMAGE_NAME}" >> $GITHUB_ENV
          echo "TAG=${TAG}" >> $GITHUB_ENV

      - name: Login to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a # v2.1.0
        with:
          username: "${{ secrets.DOCKERHUB_USERNAME }}"
          password: "${{ secrets.DOCKERHUB_TOKEN }}"

      - name: docker push
        id: docker-push
        run: docker push "${IMAGE_NAME}"
