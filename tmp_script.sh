#!/bin/bash

# Rung by passing in the function name to call as first parameter to the script.
# E.g.  ./tmp_script.sh build_rust
#
# Be aware that this script will in a follow up PR be replaced with an ob runner.

set -eux
cd "$(dirname $0)"

function install_async_bindgen_cli() {
    cargo install \
        --git https://github.com/xaynetwork/xayn_async_bindgen.git \
        async-bindgen-gen-dart \
        "$@"
}

function gen_dart_genesis_extension() {
    cd discovery_engine_core
    # Doesn't respect cargo config option, but good enough for us for now
    "${CARGO_INSTALL_ROOT:-${CARGO_HOME:-$HOME/.cargo}}/bin/async-bindgen-gen-dart" \
        --ffi-class XaynDiscoveryEngineBindingsFfi \
        --genesis ../discovery_engine/lib/src/ffi/genesis.ffigen.dart
    cd ..
}

function get_dart_deps() {
    if [ "${_DART_PUB_GET_DONE:-0}" = 0 ]; then
        _DART_PUB_GET_DONE=1
        cd discovery_engine
        dart pub get
        cd ..
    fi
}

function gen_dart_genesis() {
    get_dart_deps
    cd discovery_engine
    dart run ffigen --config ffigen.yaml
    cd ..
}

function gen_dart_build_runner() {
    get_dart_deps
    cd discovery_engine
    dart run build_runner build --delete-conflicting-outputs
    cd ..
}

function copy_ios_headers() {
    # ios needs the original headers, as wee need to statically link in the
    # binary code generated by rust (instead of loading it as a shared library)
    cp ./discovery_engine_core/bindings/include/*.h ./discovery_engine_flutter/ios/Classes/
}

function codegen_workaround() {
    if [ "${_CODEGEN_WORKAROUND_DONE:-0}" = 0 ]; then
        _CODEGEN_WORKAROUND_DONE=1
        cd discovery_engine_core
        cargo check --quiet 2>/dev/null
        cd ..
    fi
}

function check_fmt_rust() {
    cd discovery_engine_core
    cargo +nightly fmt --all -- --check
    cargo sort --grouped --workspace --check
    cd ..
}

function check_fmt_dart() {
    cd discovery_engine
    dart format --output=none --set-exit-if-changed .
    cd ..
}

function check_rust() {
    codegen_workaround
    cd discovery_engine_core
    cargo clippy --all-targets
    cd ..
}

function check_dart() {
    cd discovery_engine
    dart analyze --fatal-infos
    cd ..
}

function build_rust() {
    codegen_workaround
    cd discovery_engine_core
    cargo build
    cd ..
}

function test_rust() {
    cd discovery_engine_core
    cargo test
    cd ..
}

function test_dart() {
    cd discovery_engine
    dart test
    cd ..
}

function test_dart_full() {
    gen_dart_build_runner
    check_fmt_dart
    check_dart
    test_dart
}

function test_rust_full() {
    check_fmt_rust
    check_rust
    test_rust
}

function build_bindgen_glue() {
    codegen_workaround
    # make sure cbindgen did run properly, but we don't really
    # care if there is a problem with rust at this point in time
    cd discovery_engine_core
    cargo check || :
    cd ..
    gen_dart_genesis
    gen_dart_genesis_extension
    copy_ios_headers
}

function build_rust_ffi() {
    build_bindgen_glue
    build_rust
}

function test_all() {
    test_rust_full
    build_bindgen_glue
    build_rust
    test_dart_full
}

function clean_codegen() {
    find . \(\
        -name '*.g.dart' \
        -or -name '*.freezed.dart' \
        -or -name '*.ffigen.dart' \
        -or -name '*.ext.dart' \
    \) -exec rm '{}' \;
}

CMD="$1"
shift
"$CMD" "$@"

