services:
  postgres:
    image: postgres:15.2
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pw
      POSTGRES_DB: xayn
    ports:
      - "${HOST_PORT_SCOPE:-30}54:5432"
    networks:
      - internal
    healthcheck:
      test: pg_isready
      interval: 10s
      timeout: 5s
      retries: 5

  adminer:
    image: adminer
    restart: always
    ports:
      - "${HOST_PORT_SCOPE:-30}80:8080"
    networks:
      - internal

  elasticsearch:
    image: elasticsearch:8.6.1
    restart: always
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "${HOST_PORT_SCOPE:-30}92:9200"
    networks:
      - internal
    healthcheck:
      test: curl --fail 'http://localhost:9200/_cluster/health'
      interval: 10s
      timeout: 5s
      retries: 5

  create_es_index:
    build:
      context: ./elastic-search
      dockerfile: Dockerfile.create_es_index
    restart: "no"
    command: http://elasticsearch:9200/test_index
    depends_on:
      elasticsearch:
        condition: service_healthy
    networks:
      - internal

  db_ready:
    image: debian:bookworm-slim
    command: echo dummy
    restart: "no"
    depends_on:
      create_es_index:
        condition: service_completed_successfully
      elasticsearch:
        condition: service_healthy
      postgres:
        condition: service_healthy

  # kibana:
  #   image: kibana:8.4.0
  #   restart: always
  #   ports:
  #     - "${HOST_PORT_SCOPE:-30}56:5601"
  #   depends_on:
  #     - elasticsearch
  #   networks:
  #     - internal

networks:
  internal:
