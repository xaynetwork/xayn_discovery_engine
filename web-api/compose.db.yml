services:
  postgres:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pw
      POSTGRES_DB: xayn
    ports:
      - 5432:5432
    networks:
      - internal
    healthcheck:
      test: pg_isready
      interval: 10s
      timeout: 5s
      health-retries: 5

  # adminer:
  #   image: adminer
  #   restart: always
  #   ports:
  #     - 8080:8080
  #   networks:
  #     - internal

  elasticsearch:
    image: elasticsearch:8.5.3
    restart: always
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - 9200:9200
    networks:
      - internal
    healthcheck:
      test: curl -sf 'localhost:9200/_cluster/health'
      interval: 10s
      timeout: 5s
      health-retries: 5
      start-period: 20s

  create_es_index:
    build:
      context: ./elastic-search
      dockerfile: Dockerfile.create_es_index
    restart: "no"
    command: http://elasticsearch:9200/test_index
    depends_on:
      - elasticsearch
    networks:
      - internal

  # kibana:
  #   image: kibana:8.4.0
  #   restart: always
  #   ports:
  #     - 5601:5601
  #   depends_on:
  #     - elasticsearch
  #   networks:
  #     - internal

networks:
  internal:
    # Problem:
    #   - the proper way to start multiple compose files is to start them all together
    #     as one merged config
    #   - but sometimes you want to start some (e.g. db) and then start/stop others
    #   - but networks will by default choose an unused global name
    # Solution:
    #   - we manually set the global name (`name: internal`) which normally is not
    #     necessary
    # Bad Solution:
    #   - we set `external: true` in all other compos files except this one, problem
    #     is if we then start all as one merged config this might behave unexpected
    name: xayn-web-api_internal
